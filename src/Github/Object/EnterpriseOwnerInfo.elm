-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.EnterpriseOwnerInfo exposing (..)

import Github.Enum.DefaultRepositoryPermissionField
import Github.Enum.EnterpriseAdministratorRole
import Github.Enum.EnterpriseAllowPrivateRepositoryForkingPolicyValue
import Github.Enum.EnterpriseDefaultRepositoryPermissionSettingValue
import Github.Enum.EnterpriseEnabledDisabledSettingValue
import Github.Enum.EnterpriseEnabledSettingValue
import Github.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue
import Github.Enum.EnterpriseMembersCanMakePurchasesSettingValue
import Github.Enum.IdentityProviderConfigurationState
import Github.Enum.IpAllowListEnabledSettingValue
import Github.Enum.IpAllowListForInstalledAppsEnabledSettingValue
import Github.Enum.NotificationRestrictionSettingValue
import Github.Enum.OrganizationMembersCanCreateRepositoriesSettingValue
import Github.Enum.RepositoryVisibility
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias AdminsOptionalArguments =
    { organizationLogins : OptionalArgument (List String)
    , query : OptionalArgument String
    , role : OptionalArgument Github.Enum.EnterpriseAdministratorRole.EnterpriseAdministratorRole
    , orderBy : OptionalArgument Github.InputObject.EnterpriseMemberOrder
    , hasTwoFactorEnabled : OptionalArgument Bool
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of all of the administrators for this enterprise.

  - organizationLogins - Only return members within the organizations with these logins
  - query - The search string to look for.
  - role - The role to filter by.
  - orderBy - Ordering options for administrators returned from the connection.
  - hasTwoFactorEnabled - Only return administrators with this two-factor authentication status.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
admins :
    (AdminsOptionalArguments -> AdminsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseAdministratorConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
admins fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { organizationLogins = Absent, query = Absent, role = Absent, orderBy = Absent, hasTwoFactorEnabled = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "organizationLogins" filledInOptionals____.organizationLogins (Encode.string |> Encode.list), Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "role" filledInOptionals____.role (Encode.enum Github.Enum.EnterpriseAdministratorRole.toString), Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeEnterpriseMemberOrder, Argument.optional "hasTwoFactorEnabled" filledInOptionals____.hasTwoFactorEnabled Encode.bool, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "admins" optionalArgs____ object____ Basics.identity


type alias AffiliatedUsersWithTwoFactorDisabledOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of users in the enterprise who currently have two-factor authentication disabled.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
affiliatedUsersWithTwoFactorDisabled :
    (AffiliatedUsersWithTwoFactorDisabledOptionalArguments -> AffiliatedUsersWithTwoFactorDisabledOptionalArguments)
    -> SelectionSet decodesTo Github.Object.UserConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
affiliatedUsersWithTwoFactorDisabled fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "affiliatedUsersWithTwoFactorDisabled" optionalArgs____ object____ Basics.identity


{-| Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.
-}
affiliatedUsersWithTwoFactorDisabledExist : SelectionSet Bool Github.Object.EnterpriseOwnerInfo
affiliatedUsersWithTwoFactorDisabledExist =
    Object.selectionForField "Bool" "affiliatedUsersWithTwoFactorDisabledExist" [] Decode.bool


{-| The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.
-}
allowPrivateRepositoryForkingSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
allowPrivateRepositoryForkingSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "allowPrivateRepositoryForkingSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias AllowPrivateRepositoryForkingSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided private repository forking setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
allowPrivateRepositoryForkingSettingOrganizations :
    (AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments -> AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments)
    -> AllowPrivateRepositoryForkingSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
allowPrivateRepositoryForkingSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "allowPrivateRepositoryForkingSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The value for the allow private repository forking policy on the enterprise.
-}
allowPrivateRepositoryForkingSettingPolicyValue : SelectionSet (Maybe Github.Enum.EnterpriseAllowPrivateRepositoryForkingPolicyValue.EnterpriseAllowPrivateRepositoryForkingPolicyValue) Github.Object.EnterpriseOwnerInfo
allowPrivateRepositoryForkingSettingPolicyValue =
    Object.selectionForField "(Maybe Enum.EnterpriseAllowPrivateRepositoryForkingPolicyValue.EnterpriseAllowPrivateRepositoryForkingPolicyValue)" "allowPrivateRepositoryForkingSettingPolicyValue" [] (Github.Enum.EnterpriseAllowPrivateRepositoryForkingPolicyValue.decoder |> Decode.nullable)


{-| The setting value for base repository permissions for organizations in this enterprise.
-}
defaultRepositoryPermissionSetting : SelectionSet Github.Enum.EnterpriseDefaultRepositoryPermissionSettingValue.EnterpriseDefaultRepositoryPermissionSettingValue Github.Object.EnterpriseOwnerInfo
defaultRepositoryPermissionSetting =
    Object.selectionForField "Enum.EnterpriseDefaultRepositoryPermissionSettingValue.EnterpriseDefaultRepositoryPermissionSettingValue" "defaultRepositoryPermissionSetting" [] Github.Enum.EnterpriseDefaultRepositoryPermissionSettingValue.decoder


type alias DefaultRepositoryPermissionSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias DefaultRepositoryPermissionSettingOrganizationsRequiredArguments =
    { value : Github.Enum.DefaultRepositoryPermissionField.DefaultRepositoryPermissionField }


{-| A list of enterprise organizations configured with the provided base repository permission.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The permission to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
defaultRepositoryPermissionSettingOrganizations :
    (DefaultRepositoryPermissionSettingOrganizationsOptionalArguments -> DefaultRepositoryPermissionSettingOrganizationsOptionalArguments)
    -> DefaultRepositoryPermissionSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
defaultRepositoryPermissionSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "defaultRepositoryPermissionSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value (Encode.enum Github.Enum.DefaultRepositoryPermissionField.toString) ]) object____ Basics.identity


type alias DomainsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , isVerified : OptionalArgument Bool
    , isApproved : OptionalArgument Bool
    , orderBy : OptionalArgument Github.InputObject.VerifiableDomainOrder
    }


{-| A list of domains owned by the enterprise.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - isVerified - Filter whether or not the domain is verified.
  - isApproved - Filter whether or not the domain is approved.
  - orderBy - Ordering options for verifiable domains returned.

-}
domains :
    (DomainsOptionalArguments -> DomainsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.VerifiableDomainConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
domains fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, isVerified = Absent, isApproved = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "isVerified" filledInOptionals____.isVerified Encode.bool, Argument.optional "isApproved" filledInOptionals____.isApproved Encode.bool, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeVerifiableDomainOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "domains" optionalArgs____ object____ Basics.identity


type alias EnterpriseServerInstallationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , connectedOnly : OptionalArgument Bool
    , orderBy : OptionalArgument Github.InputObject.EnterpriseServerInstallationOrder
    }


{-| Enterprise Server installations owned by the enterprise.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - connectedOnly - Whether or not to only return installations discovered via GitHub Connect.
  - orderBy - Ordering options for Enterprise Server installations returned.

-}
enterpriseServerInstallations :
    (EnterpriseServerInstallationsOptionalArguments -> EnterpriseServerInstallationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseServerInstallationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
enterpriseServerInstallations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, connectedOnly = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "connectedOnly" filledInOptionals____.connectedOnly Encode.bool, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeEnterpriseServerInstallationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "enterpriseServerInstallations" optionalArgs____ object____ Basics.identity


{-| The setting value for whether the enterprise has an IP allow list enabled.
-}
ipAllowListEnabledSetting : SelectionSet Github.Enum.IpAllowListEnabledSettingValue.IpAllowListEnabledSettingValue Github.Object.EnterpriseOwnerInfo
ipAllowListEnabledSetting =
    Object.selectionForField "Enum.IpAllowListEnabledSettingValue.IpAllowListEnabledSettingValue" "ipAllowListEnabledSetting" [] Github.Enum.IpAllowListEnabledSettingValue.decoder


type alias IpAllowListEntriesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.IpAllowListEntryOrder
    }


{-| The IP addresses that are allowed to access resources owned by the enterprise.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for IP allow list entries returned.

-}
ipAllowListEntries :
    (IpAllowListEntriesOptionalArguments -> IpAllowListEntriesOptionalArguments)
    -> SelectionSet decodesTo Github.Object.IpAllowListEntryConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
ipAllowListEntries fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeIpAllowListEntryOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "ipAllowListEntries" optionalArgs____ object____ Basics.identity


{-| The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.
-}
ipAllowListForInstalledAppsEnabledSetting : SelectionSet Github.Enum.IpAllowListForInstalledAppsEnabledSettingValue.IpAllowListForInstalledAppsEnabledSettingValue Github.Object.EnterpriseOwnerInfo
ipAllowListForInstalledAppsEnabledSetting =
    Object.selectionForField "Enum.IpAllowListForInstalledAppsEnabledSettingValue.IpAllowListForInstalledAppsEnabledSettingValue" "ipAllowListForInstalledAppsEnabledSetting" [] Github.Enum.IpAllowListForInstalledAppsEnabledSettingValue.decoder


{-| Whether or not the base repository permission is currently being updated.
-}
isUpdatingDefaultRepositoryPermission : SelectionSet Bool Github.Object.EnterpriseOwnerInfo
isUpdatingDefaultRepositoryPermission =
    Object.selectionForField "Bool" "isUpdatingDefaultRepositoryPermission" [] Decode.bool


{-| Whether the two-factor authentication requirement is currently being enforced.
-}
isUpdatingTwoFactorRequirement : SelectionSet Bool Github.Object.EnterpriseOwnerInfo
isUpdatingTwoFactorRequirement =
    Object.selectionForField "Bool" "isUpdatingTwoFactorRequirement" [] Decode.bool


{-| The setting value for whether organization members with admin permissions on a repository can change repository visibility.
-}
membersCanChangeRepositoryVisibilitySetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanChangeRepositoryVisibilitySetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanChangeRepositoryVisibilitySetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanChangeRepositoryVisibilitySettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided can change repository visibility setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanChangeRepositoryVisibilitySettingOrganizations :
    (MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments -> MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments)
    -> MembersCanChangeRepositoryVisibilitySettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanChangeRepositoryVisibilitySettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanChangeRepositoryVisibilitySettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The setting value for whether members of organizations in the enterprise can create internal repositories.
-}
membersCanCreateInternalRepositoriesSetting : SelectionSet (Maybe Bool) Github.Object.EnterpriseOwnerInfo
membersCanCreateInternalRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreateInternalRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create private repositories.
-}
membersCanCreatePrivateRepositoriesSetting : SelectionSet (Maybe Bool) Github.Object.EnterpriseOwnerInfo
membersCanCreatePrivateRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreatePrivateRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create public repositories.
-}
membersCanCreatePublicRepositoriesSetting : SelectionSet (Maybe Bool) Github.Object.EnterpriseOwnerInfo
membersCanCreatePublicRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreatePublicRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create repositories.
-}
membersCanCreateRepositoriesSetting : SelectionSet (Maybe Github.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.EnterpriseMembersCanCreateRepositoriesSettingValue) Github.Object.EnterpriseOwnerInfo
membersCanCreateRepositoriesSetting =
    Object.selectionForField "(Maybe Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.EnterpriseMembersCanCreateRepositoriesSettingValue)" "membersCanCreateRepositoriesSetting" [] (Github.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.decoder |> Decode.nullable)


type alias MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanCreateRepositoriesSettingOrganizationsRequiredArguments =
    { value : Github.Enum.OrganizationMembersCanCreateRepositoriesSettingValue.OrganizationMembersCanCreateRepositoriesSettingValue }


{-| A list of enterprise organizations configured with the provided repository creation setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanCreateRepositoriesSettingOrganizations :
    (MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments -> MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments)
    -> MembersCanCreateRepositoriesSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanCreateRepositoriesSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanCreateRepositoriesSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value (Encode.enum Github.Enum.OrganizationMembersCanCreateRepositoriesSettingValue.toString) ]) object____ Basics.identity


{-| The setting value for whether members with admin permissions for repositories can delete issues.
-}
membersCanDeleteIssuesSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanDeleteIssuesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanDeleteIssuesSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanDeleteIssuesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanDeleteIssuesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can delete issues setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanDeleteIssuesSettingOrganizations :
    (MembersCanDeleteIssuesSettingOrganizationsOptionalArguments -> MembersCanDeleteIssuesSettingOrganizationsOptionalArguments)
    -> MembersCanDeleteIssuesSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanDeleteIssuesSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanDeleteIssuesSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The setting value for whether members with admin permissions for repositories can delete or transfer repositories.
-}
membersCanDeleteRepositoriesSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanDeleteRepositoriesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanDeleteRepositoriesSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanDeleteRepositoriesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can delete repositories setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanDeleteRepositoriesSettingOrganizations :
    (MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments -> MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments)
    -> MembersCanDeleteRepositoriesSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanDeleteRepositoriesSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanDeleteRepositoriesSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The setting value for whether members of organizations in the enterprise can invite outside collaborators.
-}
membersCanInviteCollaboratorsSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanInviteCollaboratorsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanInviteCollaboratorsSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanInviteCollaboratorsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can invite collaborators setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanInviteCollaboratorsSettingOrganizations :
    (MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments -> MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments)
    -> MembersCanInviteCollaboratorsSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanInviteCollaboratorsSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanInviteCollaboratorsSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.
-}
membersCanMakePurchasesSetting : SelectionSet Github.Enum.EnterpriseMembersCanMakePurchasesSettingValue.EnterpriseMembersCanMakePurchasesSettingValue Github.Object.EnterpriseOwnerInfo
membersCanMakePurchasesSetting =
    Object.selectionForField "Enum.EnterpriseMembersCanMakePurchasesSettingValue.EnterpriseMembersCanMakePurchasesSettingValue" "membersCanMakePurchasesSetting" [] Github.Enum.EnterpriseMembersCanMakePurchasesSettingValue.decoder


{-| The setting value for whether members with admin permissions for repositories can update protected branches.
-}
membersCanUpdateProtectedBranchesSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanUpdateProtectedBranchesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanUpdateProtectedBranchesSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanUpdateProtectedBranchesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can update protected branches setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanUpdateProtectedBranchesSettingOrganizations :
    (MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments -> MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments)
    -> MembersCanUpdateProtectedBranchesSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanUpdateProtectedBranchesSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanUpdateProtectedBranchesSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The setting value for whether members can view dependency insights.
-}
membersCanViewDependencyInsightsSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
membersCanViewDependencyInsightsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanViewDependencyInsightsSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias MembersCanViewDependencyInsightsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can view dependency insights setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanViewDependencyInsightsSettingOrganizations :
    (MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments -> MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments)
    -> MembersCanViewDependencyInsightsSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
membersCanViewDependencyInsightsSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "membersCanViewDependencyInsightsSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.
-}
notificationDeliveryRestrictionEnabledSetting : SelectionSet Github.Enum.NotificationRestrictionSettingValue.NotificationRestrictionSettingValue Github.Object.EnterpriseOwnerInfo
notificationDeliveryRestrictionEnabledSetting =
    Object.selectionForField "Enum.NotificationRestrictionSettingValue.NotificationRestrictionSettingValue" "notificationDeliveryRestrictionEnabledSetting" [] Github.Enum.NotificationRestrictionSettingValue.decoder


{-| The OIDC Identity Provider for the enterprise.
-}
oidcProvider :
    SelectionSet decodesTo Github.Object.OIDCProvider
    -> SelectionSet (Maybe decodesTo) Github.Object.EnterpriseOwnerInfo
oidcProvider object____ =
    Object.selectionForCompositeField "oidcProvider" [] object____ (Basics.identity >> Decode.nullable)


{-| The setting value for whether organization projects are enabled for organizations in this enterprise.
-}
organizationProjectsSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
organizationProjectsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "organizationProjectsSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias OrganizationProjectsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias OrganizationProjectsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided organization projects setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
organizationProjectsSettingOrganizations :
    (OrganizationProjectsSettingOrganizationsOptionalArguments -> OrganizationProjectsSettingOrganizationsOptionalArguments)
    -> OrganizationProjectsSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
organizationProjectsSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "organizationProjectsSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


type alias OutsideCollaboratorsOptionalArguments =
    { login : OptionalArgument String
    , query : OptionalArgument String
    , orderBy : OptionalArgument Github.InputObject.EnterpriseMemberOrder
    , visibility : OptionalArgument Github.Enum.RepositoryVisibility.RepositoryVisibility
    , hasTwoFactorEnabled : OptionalArgument Bool
    , organizationLogins : OptionalArgument (List String)
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of outside collaborators across the repositories in the enterprise.

  - login - The login of one specific outside collaborator.
  - query - The search string to look for.
  - orderBy - Ordering options for outside collaborators returned from the connection.
  - visibility - Only return outside collaborators on repositories with this visibility.
  - hasTwoFactorEnabled - Only return outside collaborators with this two-factor authentication status.
  - organizationLogins - Only return outside collaborators within the organizations with these logins
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
outsideCollaborators :
    (OutsideCollaboratorsOptionalArguments -> OutsideCollaboratorsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseOutsideCollaboratorConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
outsideCollaborators fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { login = Absent, query = Absent, orderBy = Absent, visibility = Absent, hasTwoFactorEnabled = Absent, organizationLogins = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "login" filledInOptionals____.login Encode.string, Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeEnterpriseMemberOrder, Argument.optional "visibility" filledInOptionals____.visibility (Encode.enum Github.Enum.RepositoryVisibility.toString), Argument.optional "hasTwoFactorEnabled" filledInOptionals____.hasTwoFactorEnabled Encode.bool, Argument.optional "organizationLogins" filledInOptionals____.organizationLogins (Encode.string |> Encode.list), Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "outsideCollaborators" optionalArgs____ object____ Basics.identity


type alias PendingAdminInvitationsOptionalArguments =
    { query : OptionalArgument String
    , orderBy : OptionalArgument Github.InputObject.EnterpriseAdministratorInvitationOrder
    , role : OptionalArgument Github.Enum.EnterpriseAdministratorRole.EnterpriseAdministratorRole
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending administrator invitations for the enterprise.

  - query - The search string to look for.
  - orderBy - Ordering options for pending enterprise administrator invitations returned from the connection.
  - role - The role to filter by.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingAdminInvitations :
    (PendingAdminInvitationsOptionalArguments -> PendingAdminInvitationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseAdministratorInvitationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
pendingAdminInvitations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { query = Absent, orderBy = Absent, role = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeEnterpriseAdministratorInvitationOrder, Argument.optional "role" filledInOptionals____.role (Encode.enum Github.Enum.EnterpriseAdministratorRole.toString), Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "pendingAdminInvitations" optionalArgs____ object____ Basics.identity


type alias PendingCollaboratorInvitationsOptionalArguments =
    { query : OptionalArgument String
    , orderBy : OptionalArgument Github.InputObject.RepositoryInvitationOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending collaborator invitations across the repositories in the enterprise.

  - query - The search string to look for.
  - orderBy - Ordering options for pending repository collaborator invitations returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingCollaboratorInvitations :
    (PendingCollaboratorInvitationsOptionalArguments -> PendingCollaboratorInvitationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.RepositoryInvitationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
pendingCollaboratorInvitations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { query = Absent, orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeRepositoryInvitationOrder, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "pendingCollaboratorInvitations" optionalArgs____ object____ Basics.identity


type alias PendingMemberInvitationsOptionalArguments =
    { query : OptionalArgument String
    , organizationLogins : OptionalArgument (List String)
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending member invitations for organizations in the enterprise.

  - query - The search string to look for.
  - organizationLogins - Only return invitations within the organizations with these logins
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingMemberInvitations :
    (PendingMemberInvitationsOptionalArguments -> PendingMemberInvitationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterprisePendingMemberInvitationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
pendingMemberInvitations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { query = Absent, organizationLogins = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "organizationLogins" filledInOptionals____.organizationLogins (Encode.string |> Encode.list), Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "pendingMemberInvitations" optionalArgs____ object____ Basics.identity


{-| The setting value for whether repository projects are enabled in this enterprise.
-}
repositoryProjectsSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
repositoryProjectsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "repositoryProjectsSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias RepositoryProjectsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias RepositoryProjectsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided repository projects setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
repositoryProjectsSettingOrganizations :
    (RepositoryProjectsSettingOrganizationsOptionalArguments -> RepositoryProjectsSettingOrganizationsOptionalArguments)
    -> RepositoryProjectsSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
repositoryProjectsSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "repositoryProjectsSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The SAML Identity Provider for the enterprise. When used by a GitHub App, requires an installation token with read and write access to members.
-}
samlIdentityProvider :
    SelectionSet decodesTo Github.Object.EnterpriseIdentityProvider
    -> SelectionSet (Maybe decodesTo) Github.Object.EnterpriseOwnerInfo
samlIdentityProvider object____ =
    Object.selectionForCompositeField "samlIdentityProvider" [] object____ (Basics.identity >> Decode.nullable)


type alias SamlIdentityProviderSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias SamlIdentityProviderSettingOrganizationsRequiredArguments =
    { value : Github.Enum.IdentityProviderConfigurationState.IdentityProviderConfigurationState }


{-| A list of enterprise organizations configured with the SAML single sign-on setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
samlIdentityProviderSettingOrganizations :
    (SamlIdentityProviderSettingOrganizationsOptionalArguments -> SamlIdentityProviderSettingOrganizationsOptionalArguments)
    -> SamlIdentityProviderSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
samlIdentityProviderSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "samlIdentityProviderSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value (Encode.enum Github.Enum.IdentityProviderConfigurationState.toString) ]) object____ Basics.identity


type alias SupportEntitlementsOptionalArguments =
    { orderBy : OptionalArgument Github.InputObject.EnterpriseMemberOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of members with a support entitlement.

  - orderBy - Ordering options for support entitlement users returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
supportEntitlements :
    (SupportEntitlementsOptionalArguments -> SupportEntitlementsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseMemberConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
supportEntitlements fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeEnterpriseMemberOrder, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "supportEntitlements" optionalArgs____ object____ Basics.identity


{-| The setting value for whether team discussions are enabled for organizations in this enterprise.
-}
teamDiscussionsSetting : SelectionSet Github.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Github.Object.EnterpriseOwnerInfo
teamDiscussionsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "teamDiscussionsSetting" [] Github.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias TeamDiscussionsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias TeamDiscussionsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided team discussions setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
teamDiscussionsSettingOrganizations :
    (TeamDiscussionsSettingOrganizationsOptionalArguments -> TeamDiscussionsSettingOrganizationsOptionalArguments)
    -> TeamDiscussionsSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
teamDiscussionsSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "teamDiscussionsSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity


{-| The setting value for whether the enterprise requires two-factor authentication for its organizations and users.
-}
twoFactorRequiredSetting : SelectionSet Github.Enum.EnterpriseEnabledSettingValue.EnterpriseEnabledSettingValue Github.Object.EnterpriseOwnerInfo
twoFactorRequiredSetting =
    Object.selectionForField "Enum.EnterpriseEnabledSettingValue.EnterpriseEnabledSettingValue" "twoFactorRequiredSetting" [] Github.Enum.EnterpriseEnabledSettingValue.decoder


type alias TwoFactorRequiredSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    }


type alias TwoFactorRequiredSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the two-factor authentication setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
twoFactorRequiredSettingOrganizations :
    (TwoFactorRequiredSettingOrganizationsOptionalArguments -> TwoFactorRequiredSettingOrganizationsOptionalArguments)
    -> TwoFactorRequiredSettingOrganizationsRequiredArguments
    -> SelectionSet decodesTo Github.Object.OrganizationConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseOwnerInfo
twoFactorRequiredSettingOrganizations fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "twoFactorRequiredSettingOrganizations" (optionalArgs____ ++ [ Argument.required "value" requiredArgs____.value Encode.bool ]) object____ Basics.identity
