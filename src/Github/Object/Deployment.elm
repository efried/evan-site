-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.Deployment exposing (..)

import Github.Enum.DeploymentState
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the commit sha of the deployment.
-}
commit :
    SelectionSet decodesTo Github.Object.Commit
    -> SelectionSet (Maybe decodesTo) Github.Object.Deployment
commit object____ =
    Object.selectionForCompositeField "commit" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the oid of the deployment commit, even if the commit has been deleted.
-}
commitOid : SelectionSet String Github.Object.Deployment
commitOid =
    Object.selectionForField "String" "commitOid" [] Decode.string


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.Deployment
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| Identifies the actor who triggered the deployment.
-}
creator :
    SelectionSet decodesTo Github.Interface.Actor
    -> SelectionSet decodesTo Github.Object.Deployment
creator object____ =
    Object.selectionForCompositeField "creator" [] object____ Basics.identity


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.Deployment
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


{-| The deployment description.
-}
description : SelectionSet (Maybe String) Github.Object.Deployment
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| The latest environment to which this deployment was made.
-}
environment : SelectionSet (Maybe String) Github.Object.Deployment
environment =
    Object.selectionForField "(Maybe String)" "environment" [] (Decode.string |> Decode.nullable)


id : SelectionSet Github.ScalarCodecs.Id Github.Object.Deployment
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The latest environment to which this deployment was made.
-}
latestEnvironment : SelectionSet (Maybe String) Github.Object.Deployment
latestEnvironment =
    Object.selectionForField "(Maybe String)" "latestEnvironment" [] (Decode.string |> Decode.nullable)


{-| The latest status of this deployment.
-}
latestStatus :
    SelectionSet decodesTo Github.Object.DeploymentStatus
    -> SelectionSet (Maybe decodesTo) Github.Object.Deployment
latestStatus object____ =
    Object.selectionForCompositeField "latestStatus" [] object____ (Basics.identity >> Decode.nullable)


{-| The original environment to which this deployment was made.
-}
originalEnvironment : SelectionSet (Maybe String) Github.Object.Deployment
originalEnvironment =
    Object.selectionForField "(Maybe String)" "originalEnvironment" [] (Decode.string |> Decode.nullable)


{-| Extra information that a deployment system might need.
-}
payload : SelectionSet (Maybe String) Github.Object.Deployment
payload =
    Object.selectionForField "(Maybe String)" "payload" [] (Decode.string |> Decode.nullable)


{-| Identifies the Ref of the deployment, if the deployment was created by ref.
-}
ref :
    SelectionSet decodesTo Github.Object.Ref
    -> SelectionSet (Maybe decodesTo) Github.Object.Deployment
ref object____ =
    Object.selectionForCompositeField "ref" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the repository associated with the deployment.
-}
repository :
    SelectionSet decodesTo Github.Object.Repository
    -> SelectionSet decodesTo Github.Object.Deployment
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| The current state of the deployment.
-}
state : SelectionSet (Maybe Github.Enum.DeploymentState.DeploymentState) Github.Object.Deployment
state =
    Object.selectionForField "(Maybe Enum.DeploymentState.DeploymentState)" "state" [] (Github.Enum.DeploymentState.decoder |> Decode.nullable)


type alias StatusesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of statuses associated with the deployment.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
statuses :
    (StatusesOptionalArguments -> StatusesOptionalArguments)
    -> SelectionSet decodesTo Github.Object.DeploymentStatusConnection
    -> SelectionSet (Maybe decodesTo) Github.Object.Deployment
statuses fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "statuses" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| The deployment task.
-}
task : SelectionSet (Maybe String) Github.Object.Deployment
task =
    Object.selectionForField "(Maybe String)" "task" [] (Decode.string |> Decode.nullable)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.Deployment
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
