-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.SecurityAdvisory exposing (..)

import Github.Enum.SecurityAdvisoryClassification
import Github.Enum.SecurityAdvisoryEcosystem
import Github.Enum.SecurityAdvisorySeverity
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The classification of the advisory
-}
classification : SelectionSet Github.Enum.SecurityAdvisoryClassification.SecurityAdvisoryClassification Github.Object.SecurityAdvisory
classification =
    Object.selectionForField "Enum.SecurityAdvisoryClassification.SecurityAdvisoryClassification" "classification" [] Github.Enum.SecurityAdvisoryClassification.decoder


{-| The CVSS associated with this advisory
-}
cvss :
    SelectionSet decodesTo Github.Object.Cvss
    -> SelectionSet decodesTo Github.Object.SecurityAdvisory
cvss object____ =
    Object.selectionForCompositeField "cvss" [] object____ Basics.identity


type alias CwesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| CWEs associated with this Advisory

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
cwes :
    (CwesOptionalArguments -> CwesOptionalArguments)
    -> SelectionSet decodesTo Github.Object.CWEConnection
    -> SelectionSet decodesTo Github.Object.SecurityAdvisory
cwes fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "cwes" optionalArgs____ object____ Basics.identity


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.SecurityAdvisory
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


{-| This is a long plaintext description of the advisory
-}
description : SelectionSet String Github.Object.SecurityAdvisory
description =
    Object.selectionForField "String" "description" [] Decode.string


{-| The GitHub Security Advisory ID
-}
ghsaId : SelectionSet String Github.Object.SecurityAdvisory
ghsaId =
    Object.selectionForField "String" "ghsaId" [] Decode.string


id : SelectionSet Github.ScalarCodecs.Id Github.Object.SecurityAdvisory
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| A list of identifiers for this advisory
-}
identifiers :
    SelectionSet decodesTo Github.Object.SecurityAdvisoryIdentifier
    -> SelectionSet (List decodesTo) Github.Object.SecurityAdvisory
identifiers object____ =
    Object.selectionForCompositeField "identifiers" [] object____ (Basics.identity >> Decode.list)


{-| The permalink for the advisory's dependabot alerts page
-}
notificationsPermalink : SelectionSet (Maybe Github.ScalarCodecs.Uri) Github.Object.SecurityAdvisory
notificationsPermalink =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "notificationsPermalink" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The organization that originated the advisory
-}
origin : SelectionSet String Github.Object.SecurityAdvisory
origin =
    Object.selectionForField "String" "origin" [] Decode.string


{-| The permalink for the advisory
-}
permalink : SelectionSet (Maybe Github.ScalarCodecs.Uri) Github.Object.SecurityAdvisory
permalink =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "permalink" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| When the advisory was published
-}
publishedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.SecurityAdvisory
publishedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "publishedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| A list of references for this advisory
-}
references :
    SelectionSet decodesTo Github.Object.SecurityAdvisoryReference
    -> SelectionSet (List decodesTo) Github.Object.SecurityAdvisory
references object____ =
    Object.selectionForCompositeField "references" [] object____ (Basics.identity >> Decode.list)


{-| The severity of the advisory
-}
severity : SelectionSet Github.Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity Github.Object.SecurityAdvisory
severity =
    Object.selectionForField "Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity" "severity" [] Github.Enum.SecurityAdvisorySeverity.decoder


{-| A short plaintext summary of the advisory
-}
summary : SelectionSet String Github.Object.SecurityAdvisory
summary =
    Object.selectionForField "String" "summary" [] Decode.string


{-| When the advisory was last updated
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.SecurityAdvisory
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


type alias VulnerabilitiesOptionalArguments =
    { orderBy : OptionalArgument Github.InputObject.SecurityVulnerabilityOrder
    , ecosystem : OptionalArgument Github.Enum.SecurityAdvisoryEcosystem.SecurityAdvisoryEcosystem
    , package : OptionalArgument String
    , severities : OptionalArgument (List Github.Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity)
    , classifications : OptionalArgument (List Github.Enum.SecurityAdvisoryClassification.SecurityAdvisoryClassification)
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| Vulnerabilities associated with this Advisory

  - orderBy - Ordering options for the returned topics.
  - ecosystem - An ecosystem to filter vulnerabilities by.
  - package - A package name to filter vulnerabilities by.
  - severities - A list of severities to filter vulnerabilities by.
  - classifications - A list of advisory classifications to filter vulnerabilities by.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
vulnerabilities :
    (VulnerabilitiesOptionalArguments -> VulnerabilitiesOptionalArguments)
    -> SelectionSet decodesTo Github.Object.SecurityVulnerabilityConnection
    -> SelectionSet decodesTo Github.Object.SecurityAdvisory
vulnerabilities fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { orderBy = Absent, ecosystem = Absent, package = Absent, severities = Absent, classifications = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeSecurityVulnerabilityOrder, Argument.optional "ecosystem" filledInOptionals____.ecosystem (Encode.enum Github.Enum.SecurityAdvisoryEcosystem.toString), Argument.optional "package" filledInOptionals____.package Encode.string, Argument.optional "severities" filledInOptionals____.severities (Encode.enum Github.Enum.SecurityAdvisorySeverity.toString |> Encode.list), Argument.optional "classifications" filledInOptionals____.classifications (Encode.enum Github.Enum.SecurityAdvisoryClassification.toString |> Encode.list), Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "vulnerabilities" optionalArgs____ object____ Basics.identity


{-| When the advisory was withdrawn, if it has been withdrawn
-}
withdrawnAt : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.SecurityAdvisory
withdrawnAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "withdrawnAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)
