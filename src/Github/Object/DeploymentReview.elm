-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.DeploymentReview exposing (..)

import Github.Enum.DeploymentReviewState
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The comment the user left.
-}
comment : SelectionSet String Github.Object.DeploymentReview
comment =
    Object.selectionForField "String" "comment" [] Decode.string


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.DeploymentReview
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


type alias EnvironmentsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| The environments approved or rejected

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
environments :
    (EnvironmentsOptionalArguments -> EnvironmentsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnvironmentConnection
    -> SelectionSet decodesTo Github.Object.DeploymentReview
environments fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "environments" optionalArgs____ object____ Basics.identity


id : SelectionSet Github.ScalarCodecs.Id Github.Object.DeploymentReview
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The decision of the user.
-}
state : SelectionSet Github.Enum.DeploymentReviewState.DeploymentReviewState Github.Object.DeploymentReview
state =
    Object.selectionForField "Enum.DeploymentReviewState.DeploymentReviewState" "state" [] Github.Enum.DeploymentReviewState.decoder


{-| The user that reviewed the deployment.
-}
user :
    SelectionSet decodesTo Github.Object.User
    -> SelectionSet decodesTo Github.Object.DeploymentReview
user object____ =
    Object.selectionForCompositeField "user" [] object____ Basics.identity
