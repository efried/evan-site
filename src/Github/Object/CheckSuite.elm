-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.CheckSuite exposing (..)

import Github.Enum.CheckConclusionState
import Github.Enum.CheckStatusState
import Github.Enum.PullRequestState
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The GitHub App which created this check suite.
-}
app :
    SelectionSet decodesTo Github.Object.App
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
app object____ =
    Object.selectionForCompositeField "app" [] object____ (Basics.identity >> Decode.nullable)


{-| The name of the branch for this check suite.
-}
branch :
    SelectionSet decodesTo Github.Object.Ref
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
branch object____ =
    Object.selectionForCompositeField "branch" [] object____ (Basics.identity >> Decode.nullable)


type alias CheckRunsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , filterBy : OptionalArgument Github.InputObject.CheckRunFilter
    }


{-| The check runs associated with a check suite.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - filterBy - Filters the check runs by this type.

-}
checkRuns :
    (CheckRunsOptionalArguments -> CheckRunsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.CheckRunConnection
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
checkRuns fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, filterBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "filterBy" filledInOptionals____.filterBy Github.InputObject.encodeCheckRunFilter ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "checkRuns" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| The commit for this check suite
-}
commit :
    SelectionSet decodesTo Github.Object.Commit
    -> SelectionSet decodesTo Github.Object.CheckSuite
commit object____ =
    Object.selectionForCompositeField "commit" [] object____ Basics.identity


{-| The conclusion of this check suite.
-}
conclusion : SelectionSet (Maybe Github.Enum.CheckConclusionState.CheckConclusionState) Github.Object.CheckSuite
conclusion =
    Object.selectionForField "(Maybe Enum.CheckConclusionState.CheckConclusionState)" "conclusion" [] (Github.Enum.CheckConclusionState.decoder |> Decode.nullable)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.CheckSuite
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The user who triggered the check suite.
-}
creator :
    SelectionSet decodesTo Github.Object.User
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
creator object____ =
    Object.selectionForCompositeField "creator" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.CheckSuite
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


id : SelectionSet Github.ScalarCodecs.Id Github.Object.CheckSuite
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


type alias MatchingPullRequestsOptionalArguments =
    { states : OptionalArgument (List Github.Enum.PullRequestState.PullRequestState)
    , labels : OptionalArgument (List String)
    , headRefName : OptionalArgument String
    , baseRefName : OptionalArgument String
    , orderBy : OptionalArgument Github.InputObject.IssueOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of open pull requests matching the check suite.

  - states - A list of states to filter the pull requests by.
  - labels - A list of label names to filter the pull requests by.
  - headRefName - The head ref name to filter the pull requests by.
  - baseRefName - The base ref name to filter the pull requests by.
  - orderBy - Ordering options for pull requests returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
matchingPullRequests :
    (MatchingPullRequestsOptionalArguments -> MatchingPullRequestsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.PullRequestConnection
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
matchingPullRequests fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { states = Absent, labels = Absent, headRefName = Absent, baseRefName = Absent, orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "states" filledInOptionals____.states (Encode.enum Github.Enum.PullRequestState.toString |> Encode.list), Argument.optional "labels" filledInOptionals____.labels (Encode.string |> Encode.list), Argument.optional "headRefName" filledInOptionals____.headRefName Encode.string, Argument.optional "baseRefName" filledInOptionals____.baseRefName Encode.string, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeIssueOrder, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "matchingPullRequests" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| The push that triggered this check suite.
-}
push :
    SelectionSet decodesTo Github.Object.Push
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
push object____ =
    Object.selectionForCompositeField "push" [] object____ (Basics.identity >> Decode.nullable)


{-| The repository associated with this check suite.
-}
repository :
    SelectionSet decodesTo Github.Object.Repository
    -> SelectionSet decodesTo Github.Object.CheckSuite
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| The HTTP path for this check suite
-}
resourcePath : SelectionSet Github.ScalarCodecs.Uri Github.Object.CheckSuite
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The status of this check suite.
-}
status : SelectionSet Github.Enum.CheckStatusState.CheckStatusState Github.Object.CheckSuite
status =
    Object.selectionForField "Enum.CheckStatusState.CheckStatusState" "status" [] Github.Enum.CheckStatusState.decoder


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.CheckSuite
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this check suite
-}
url : SelectionSet Github.ScalarCodecs.Uri Github.Object.CheckSuite
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The workflow run associated with this check suite.
-}
workflowRun :
    SelectionSet decodesTo Github.Object.WorkflowRun
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckSuite
workflowRun object____ =
    Object.selectionForCompositeField "workflowRun" [] object____ (Basics.identity >> Decode.nullable)
