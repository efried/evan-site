-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.EnterpriseUserAccount exposing (..)

import Github.Enum.EnterpriseUserAccountMembershipRole
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias AvatarUrlOptionalArguments =
    { size : OptionalArgument Int }


{-| A URL pointing to the enterprise user account's public avatar.

  - size - The size of the resulting square image.

-}
avatarUrl :
    (AvatarUrlOptionalArguments -> AvatarUrlOptionalArguments)
    -> SelectionSet Github.ScalarCodecs.Uri Github.Object.EnterpriseUserAccount
avatarUrl fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { size = Absent }

        optionalArgs____ =
            [ Argument.optional "size" filledInOptionals____.size Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "ScalarCodecs.Uri" "avatarUrl" optionalArgs____ (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.EnterpriseUserAccount
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The enterprise in which this user account exists.
-}
enterprise :
    SelectionSet decodesTo Github.Object.Enterprise
    -> SelectionSet decodesTo Github.Object.EnterpriseUserAccount
enterprise object____ =
    Object.selectionForCompositeField "enterprise" [] object____ Basics.identity


id : SelectionSet Github.ScalarCodecs.Id Github.Object.EnterpriseUserAccount
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| An identifier for the enterprise user account, a login or email address
-}
login : SelectionSet String Github.Object.EnterpriseUserAccount
login =
    Object.selectionForField "String" "login" [] Decode.string


{-| The name of the enterprise user account
-}
name : SelectionSet (Maybe String) Github.Object.EnterpriseUserAccount
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


type alias OrganizationsOptionalArguments =
    { query : OptionalArgument String
    , orderBy : OptionalArgument Github.InputObject.OrganizationOrder
    , role : OptionalArgument Github.Enum.EnterpriseUserAccountMembershipRole.EnterpriseUserAccountMembershipRole
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of enterprise organizations this user is a member of.

  - query - The search string to look for.
  - orderBy - Ordering options for organizations returned from the connection.
  - role - The role of the user in the enterprise organization.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
organizations :
    (OrganizationsOptionalArguments -> OrganizationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.EnterpriseOrganizationMembershipConnection
    -> SelectionSet decodesTo Github.Object.EnterpriseUserAccount
organizations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { query = Absent, orderBy = Absent, role = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "query" filledInOptionals____.query Encode.string, Argument.optional "orderBy" filledInOptionals____.orderBy Github.InputObject.encodeOrganizationOrder, Argument.optional "role" filledInOptionals____.role (Encode.enum Github.Enum.EnterpriseUserAccountMembershipRole.toString), Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "organizations" optionalArgs____ object____ Basics.identity


{-| The HTTP path for this user.
-}
resourcePath : SelectionSet Github.ScalarCodecs.Uri Github.Object.EnterpriseUserAccount
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.EnterpriseUserAccount
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this user.
-}
url : SelectionSet Github.ScalarCodecs.Uri Github.Object.EnterpriseUserAccount
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The user within the enterprise.
-}
user :
    SelectionSet decodesTo Github.Object.User
    -> SelectionSet (Maybe decodesTo) Github.Object.EnterpriseUserAccount
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)
