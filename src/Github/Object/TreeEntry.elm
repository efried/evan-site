-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.TreeEntry exposing (..)

import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The extension of the file
-}
extension : SelectionSet (Maybe String) Github.Object.TreeEntry
extension =
    Object.selectionForField "(Maybe String)" "extension" [] (Decode.string |> Decode.nullable)


{-| Whether or not this tree entry is generated
-}
isGenerated : SelectionSet Bool Github.Object.TreeEntry
isGenerated =
    Object.selectionForField "Bool" "isGenerated" [] Decode.bool


{-| The programming language this file is written in.
-}
language :
    SelectionSet decodesTo Github.Object.Language
    -> SelectionSet (Maybe decodesTo) Github.Object.TreeEntry
language object____ =
    Object.selectionForCompositeField "language" [] object____ (Basics.identity >> Decode.nullable)


{-| Number of lines in the file.
-}
lineCount : SelectionSet (Maybe Int) Github.Object.TreeEntry
lineCount =
    Object.selectionForField "(Maybe Int)" "lineCount" [] (Decode.int |> Decode.nullable)


{-| Entry file mode.
-}
mode : SelectionSet Int Github.Object.TreeEntry
mode =
    Object.selectionForField "Int" "mode" [] Decode.int


{-| Entry file name.
-}
name : SelectionSet String Github.Object.TreeEntry
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Entry file object.
-}
object :
    SelectionSet decodesTo Github.Interface.GitObject
    -> SelectionSet (Maybe decodesTo) Github.Object.TreeEntry
object object____ =
    Object.selectionForCompositeField "object" [] object____ (Basics.identity >> Decode.nullable)


{-| Entry file Git object ID.
-}
oid : SelectionSet Github.ScalarCodecs.GitObjectID Github.Object.TreeEntry
oid =
    Object.selectionForField "ScalarCodecs.GitObjectID" "oid" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecGitObjectID |> .decoder)


{-| The full path of the file.
-}
path : SelectionSet (Maybe String) Github.Object.TreeEntry
path =
    Object.selectionForField "(Maybe String)" "path" [] (Decode.string |> Decode.nullable)


{-| The Repository the tree entry belongs to
-}
repository :
    SelectionSet decodesTo Github.Object.Repository
    -> SelectionSet decodesTo Github.Object.TreeEntry
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| Entry byte size
-}
size : SelectionSet Int Github.Object.TreeEntry
size =
    Object.selectionForField "Int" "size" [] Decode.int


{-| If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule
-}
submodule :
    SelectionSet decodesTo Github.Object.Submodule
    -> SelectionSet (Maybe decodesTo) Github.Object.TreeEntry
submodule object____ =
    Object.selectionForCompositeField "submodule" [] object____ (Basics.identity >> Decode.nullable)


{-| Entry file type.
-}
type_ : SelectionSet String Github.Object.TreeEntry
type_ =
    Object.selectionForField "String" "type" [] Decode.string
