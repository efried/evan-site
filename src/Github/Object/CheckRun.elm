-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.CheckRun exposing (..)

import Github.Enum.CheckConclusionState
import Github.Enum.CheckStatusState
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias AnnotationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| The check run's annotations

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
annotations :
    (AnnotationsOptionalArguments -> AnnotationsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.CheckAnnotationConnection
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckRun
annotations fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "annotations" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| The check suite that this run is a part of.
-}
checkSuite :
    SelectionSet decodesTo Github.Object.CheckSuite
    -> SelectionSet decodesTo Github.Object.CheckRun
checkSuite object____ =
    Object.selectionForCompositeField "checkSuite" [] object____ Basics.identity


{-| Identifies the date and time when the check run was completed.
-}
completedAt : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.CheckRun
completedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "completedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| The conclusion of the check run.
-}
conclusion : SelectionSet (Maybe Github.Enum.CheckConclusionState.CheckConclusionState) Github.Object.CheckRun
conclusion =
    Object.selectionForField "(Maybe Enum.CheckConclusionState.CheckConclusionState)" "conclusion" [] (Github.Enum.CheckConclusionState.decoder |> Decode.nullable)


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.CheckRun
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


{-| The corresponding deployment for this job, if any
-}
deployment :
    SelectionSet decodesTo Github.Object.Deployment
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckRun
deployment object____ =
    Object.selectionForCompositeField "deployment" [] object____ (Basics.identity >> Decode.nullable)


{-| The URL from which to find full details of the check run on the integrator's site.
-}
detailsUrl : SelectionSet (Maybe Github.ScalarCodecs.Uri) Github.Object.CheckRun
detailsUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "detailsUrl" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| A reference for the check run on the integrator's system.
-}
externalId : SelectionSet (Maybe String) Github.Object.CheckRun
externalId =
    Object.selectionForField "(Maybe String)" "externalId" [] (Decode.string |> Decode.nullable)


id : SelectionSet Github.ScalarCodecs.Id Github.Object.CheckRun
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


type alias IsRequiredOptionalArguments =
    { pullRequestId : OptionalArgument Github.ScalarCodecs.Id
    , pullRequestNumber : OptionalArgument Int
    }


{-| Whether this is required to pass before merging for a specific pull request.

  - pullRequestId - The id of the pull request this is required for
  - pullRequestNumber - The number of the pull request this is required for

-}
isRequired :
    (IsRequiredOptionalArguments -> IsRequiredOptionalArguments)
    -> SelectionSet Bool Github.Object.CheckRun
isRequired fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { pullRequestId = Absent, pullRequestNumber = Absent }

        optionalArgs____ =
            [ Argument.optional "pullRequestId" filledInOptionals____.pullRequestId (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapEncoder .codecId), Argument.optional "pullRequestNumber" filledInOptionals____.pullRequestNumber Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "Bool" "isRequired" optionalArgs____ Decode.bool


{-| The name of the check for this check run.
-}
name : SelectionSet String Github.Object.CheckRun
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Information about a pending deployment, if any, in this check run
-}
pendingDeploymentRequest :
    SelectionSet decodesTo Github.Object.DeploymentRequest
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckRun
pendingDeploymentRequest object____ =
    Object.selectionForCompositeField "pendingDeploymentRequest" [] object____ (Basics.identity >> Decode.nullable)


{-| The permalink to the check run summary.
-}
permalink : SelectionSet Github.ScalarCodecs.Uri Github.Object.CheckRun
permalink =
    Object.selectionForField "ScalarCodecs.Uri" "permalink" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The repository associated with this check run.
-}
repository :
    SelectionSet decodesTo Github.Object.Repository
    -> SelectionSet decodesTo Github.Object.CheckRun
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| The HTTP path for this check run.
-}
resourcePath : SelectionSet Github.ScalarCodecs.Uri Github.Object.CheckRun
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Identifies the date and time when the check run was started.
-}
startedAt : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.CheckRun
startedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "startedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| The current status of the check run.
-}
status : SelectionSet Github.Enum.CheckStatusState.CheckStatusState Github.Object.CheckRun
status =
    Object.selectionForField "Enum.CheckStatusState.CheckStatusState" "status" [] Github.Enum.CheckStatusState.decoder


type alias StepsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , number : OptionalArgument Int
    }


{-| The check run's steps

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - number - Step number

-}
steps :
    (StepsOptionalArguments -> StepsOptionalArguments)
    -> SelectionSet decodesTo Github.Object.CheckStepConnection
    -> SelectionSet (Maybe decodesTo) Github.Object.CheckRun
steps fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, number = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "number" filledInOptionals____.number Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "steps" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| A string representing the check run's summary
-}
summary : SelectionSet (Maybe String) Github.Object.CheckRun
summary =
    Object.selectionForField "(Maybe String)" "summary" [] (Decode.string |> Decode.nullable)


{-| A string representing the check run's text
-}
text : SelectionSet (Maybe String) Github.Object.CheckRun
text =
    Object.selectionForField "(Maybe String)" "text" [] (Decode.string |> Decode.nullable)


{-| A string representing the check run
-}
title : SelectionSet (Maybe String) Github.Object.CheckRun
title =
    Object.selectionForField "(Maybe String)" "title" [] (Decode.string |> Decode.nullable)


{-| The HTTP URL for this check run.
-}
url : SelectionSet Github.ScalarCodecs.Uri Github.Object.CheckRun
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)
