-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.ProjectNextOrderField exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Properties by which the return project can be ordered.

  - Title - The project's title
  - Number - The project's number
  - UpdatedAt - The project's date and time of update
  - CreatedAt - The project's date and time of creation

-}
type ProjectNextOrderField
    = Title
    | Number
    | UpdatedAt
    | CreatedAt


list : List ProjectNextOrderField
list =
    [ Title, Number, UpdatedAt, CreatedAt ]


decoder : Decoder ProjectNextOrderField
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "TITLE" ->
                        Decode.succeed Title

                    "NUMBER" ->
                        Decode.succeed Number

                    "UPDATED_AT" ->
                        Decode.succeed UpdatedAt

                    "CREATED_AT" ->
                        Decode.succeed CreatedAt

                    _ ->
                        Decode.fail ("Invalid ProjectNextOrderField type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ProjectNextOrderField -> String
toString enum____ =
    case enum____ of
        Title ->
            "TITLE"

        Number ->
            "NUMBER"

        UpdatedAt ->
            "UPDATED_AT"

        CreatedAt ->
            "CREATED_AT"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ProjectNextOrderField
fromString enumString____ =
    case enumString____ of
        "TITLE" ->
            Just Title

        "NUMBER" ->
            Just Number

        "UPDATED_AT" ->
            Just UpdatedAt

        "CREATED_AT" ->
            Just CreatedAt

        _ ->
            Nothing
