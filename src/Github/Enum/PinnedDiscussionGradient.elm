-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.PinnedDiscussionGradient exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Preconfigured gradients that may be used to style discussions pinned within a repository.

  - RedOrange - A gradient of red to orange
  - BlueMint - A gradient of blue to mint
  - BluePurple - A gradient of blue to purple
  - PinkBlue - A gradient of pink to blue
  - PurpleCoral - A gradient of purple to coral

-}
type PinnedDiscussionGradient
    = RedOrange
    | BlueMint
    | BluePurple
    | PinkBlue
    | PurpleCoral


list : List PinnedDiscussionGradient
list =
    [ RedOrange, BlueMint, BluePurple, PinkBlue, PurpleCoral ]


decoder : Decoder PinnedDiscussionGradient
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "RED_ORANGE" ->
                        Decode.succeed RedOrange

                    "BLUE_MINT" ->
                        Decode.succeed BlueMint

                    "BLUE_PURPLE" ->
                        Decode.succeed BluePurple

                    "PINK_BLUE" ->
                        Decode.succeed PinkBlue

                    "PURPLE_CORAL" ->
                        Decode.succeed PurpleCoral

                    _ ->
                        Decode.fail ("Invalid PinnedDiscussionGradient type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : PinnedDiscussionGradient -> String
toString enum____ =
    case enum____ of
        RedOrange ->
            "RED_ORANGE"

        BlueMint ->
            "BLUE_MINT"

        BluePurple ->
            "BLUE_PURPLE"

        PinkBlue ->
            "PINK_BLUE"

        PurpleCoral ->
            "PURPLE_CORAL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe PinnedDiscussionGradient
fromString enumString____ =
    case enumString____ of
        "RED_ORANGE" ->
            Just RedOrange

        "BLUE_MINT" ->
            Just BlueMint

        "BLUE_PURPLE" ->
            Just BluePurple

        "PINK_BLUE" ->
            Just PinkBlue

        "PURPLE_CORAL" ->
            Just PurpleCoral

        _ ->
            Nothing
