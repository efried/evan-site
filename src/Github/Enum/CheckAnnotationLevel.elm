-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.CheckAnnotationLevel exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Represents an annotation's information level.

  - Failure - An annotation indicating an inescapable error.
  - Notice - An annotation indicating some information.
  - Warning - An annotation indicating an ignorable error.

-}
type CheckAnnotationLevel
    = Failure
    | Notice
    | Warning


list : List CheckAnnotationLevel
list =
    [ Failure, Notice, Warning ]


decoder : Decoder CheckAnnotationLevel
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "FAILURE" ->
                        Decode.succeed Failure

                    "NOTICE" ->
                        Decode.succeed Notice

                    "WARNING" ->
                        Decode.succeed Warning

                    _ ->
                        Decode.fail ("Invalid CheckAnnotationLevel type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : CheckAnnotationLevel -> String
toString enum____ =
    case enum____ of
        Failure ->
            "FAILURE"

        Notice ->
            "NOTICE"

        Warning ->
            "WARNING"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe CheckAnnotationLevel
fromString enumString____ =
    case enumString____ of
        "FAILURE" ->
            Just Failure

        "NOTICE" ->
            Just Notice

        "WARNING" ->
            Just Warning

        _ ->
            Nothing
