-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.ComparisonStatus exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The status of a git comparison between two refs.

  - Diverged - The head ref is both ahead and behind of the base ref, indicating git history has diverged.
  - Ahead - The head ref is ahead of the base ref.
  - Behind - The head ref is behind the base ref.
  - Identical - The head ref and base ref are identical.

-}
type ComparisonStatus
    = Diverged
    | Ahead
    | Behind
    | Identical


list : List ComparisonStatus
list =
    [ Diverged, Ahead, Behind, Identical ]


decoder : Decoder ComparisonStatus
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DIVERGED" ->
                        Decode.succeed Diverged

                    "AHEAD" ->
                        Decode.succeed Ahead

                    "BEHIND" ->
                        Decode.succeed Behind

                    "IDENTICAL" ->
                        Decode.succeed Identical

                    _ ->
                        Decode.fail ("Invalid ComparisonStatus type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ComparisonStatus -> String
toString enum____ =
    case enum____ of
        Diverged ->
            "DIVERGED"

        Ahead ->
            "AHEAD"

        Behind ->
            "BEHIND"

        Identical ->
            "IDENTICAL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ComparisonStatus
fromString enumString____ =
    case enumString____ of
        "DIVERGED" ->
            Just Diverged

        "AHEAD" ->
            Just Ahead

        "BEHIND" ->
            Just Behind

        "IDENTICAL" ->
            Just Identical

        _ ->
            Nothing
