-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.SquashMergeCommitMessage exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible default commit messages for squash merges.

  - PrBody - Default to the pull request's body.
  - CommitMessages - Default to the branch's commit messages.
  - Blank - Default to a blank commit message.

-}
type SquashMergeCommitMessage
    = PrBody
    | CommitMessages
    | Blank


list : List SquashMergeCommitMessage
list =
    [ PrBody, CommitMessages, Blank ]


decoder : Decoder SquashMergeCommitMessage
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "PR_BODY" ->
                        Decode.succeed PrBody

                    "COMMIT_MESSAGES" ->
                        Decode.succeed CommitMessages

                    "BLANK" ->
                        Decode.succeed Blank

                    _ ->
                        Decode.fail ("Invalid SquashMergeCommitMessage type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : SquashMergeCommitMessage -> String
toString enum____ =
    case enum____ of
        PrBody ->
            "PR_BODY"

        CommitMessages ->
            "COMMIT_MESSAGES"

        Blank ->
            "BLANK"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe SquashMergeCommitMessage
fromString enumString____ =
    case enumString____ of
        "PR_BODY" ->
            Just PrBody

        "COMMIT_MESSAGES" ->
            Just CommitMessages

        "BLANK" ->
            Just Blank

        _ ->
            Nothing
