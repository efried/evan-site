-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.RepositoryInteractionLimitExpiry exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The length for a repository interaction limit to be enabled for.

  - OneDay - The interaction limit will expire after 1 day.
  - ThreeDays - The interaction limit will expire after 3 days.
  - OneWeek - The interaction limit will expire after 1 week.
  - OneMonth - The interaction limit will expire after 1 month.
  - SixMonths - The interaction limit will expire after 6 months.

-}
type RepositoryInteractionLimitExpiry
    = OneDay
    | ThreeDays
    | OneWeek
    | OneMonth
    | SixMonths


list : List RepositoryInteractionLimitExpiry
list =
    [ OneDay, ThreeDays, OneWeek, OneMonth, SixMonths ]


decoder : Decoder RepositoryInteractionLimitExpiry
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ONE_DAY" ->
                        Decode.succeed OneDay

                    "THREE_DAYS" ->
                        Decode.succeed ThreeDays

                    "ONE_WEEK" ->
                        Decode.succeed OneWeek

                    "ONE_MONTH" ->
                        Decode.succeed OneMonth

                    "SIX_MONTHS" ->
                        Decode.succeed SixMonths

                    _ ->
                        Decode.fail ("Invalid RepositoryInteractionLimitExpiry type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : RepositoryInteractionLimitExpiry -> String
toString enum____ =
    case enum____ of
        OneDay ->
            "ONE_DAY"

        ThreeDays ->
            "THREE_DAYS"

        OneWeek ->
            "ONE_WEEK"

        OneMonth ->
            "ONE_MONTH"

        SixMonths ->
            "SIX_MONTHS"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe RepositoryInteractionLimitExpiry
fromString enumString____ =
    case enumString____ of
        "ONE_DAY" ->
            Just OneDay

        "THREE_DAYS" ->
            Just ThreeDays

        "ONE_WEEK" ->
            Just OneWeek

        "ONE_MONTH" ->
            Just OneMonth

        "SIX_MONTHS" ->
            Just SixMonths

        _ ->
            Nothing
