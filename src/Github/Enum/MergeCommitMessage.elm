-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.MergeCommitMessage exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible default commit messages for merges.

  - PrTitle - Default to the pull request's title.
  - PrBody - Default to the pull request's body.
  - Blank - Default to a blank commit message.

-}
type MergeCommitMessage
    = PrTitle
    | PrBody
    | Blank


list : List MergeCommitMessage
list =
    [ PrTitle, PrBody, Blank ]


decoder : Decoder MergeCommitMessage
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "PR_TITLE" ->
                        Decode.succeed PrTitle

                    "PR_BODY" ->
                        Decode.succeed PrBody

                    "BLANK" ->
                        Decode.succeed Blank

                    _ ->
                        Decode.fail ("Invalid MergeCommitMessage type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : MergeCommitMessage -> String
toString enum____ =
    case enum____ of
        PrTitle ->
            "PR_TITLE"

        PrBody ->
            "PR_BODY"

        Blank ->
            "BLANK"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MergeCommitMessage
fromString enumString____ =
    case enumString____ of
        "PR_TITLE" ->
            Just PrTitle

        "PR_BODY" ->
            Just PrBody

        "BLANK" ->
            Just Blank

        _ ->
            Nothing
