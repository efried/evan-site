-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.ContributionLevel exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Varying levels of contributions from none to many.

  - None - No contributions occurred.
  - FirstQuartile - Lowest 25% of days of contributions.
  - SecondQuartile - Second lowest 25% of days of contributions. More contributions than the first quartile.
  - ThirdQuartile - Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile.
  - FourthQuartile - Highest 25% of days of contributions. More contributions than the third quartile.

-}
type ContributionLevel
    = None
    | FirstQuartile
    | SecondQuartile
    | ThirdQuartile
    | FourthQuartile


list : List ContributionLevel
list =
    [ None, FirstQuartile, SecondQuartile, ThirdQuartile, FourthQuartile ]


decoder : Decoder ContributionLevel
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "NONE" ->
                        Decode.succeed None

                    "FIRST_QUARTILE" ->
                        Decode.succeed FirstQuartile

                    "SECOND_QUARTILE" ->
                        Decode.succeed SecondQuartile

                    "THIRD_QUARTILE" ->
                        Decode.succeed ThirdQuartile

                    "FOURTH_QUARTILE" ->
                        Decode.succeed FourthQuartile

                    _ ->
                        Decode.fail ("Invalid ContributionLevel type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ContributionLevel -> String
toString enum____ =
    case enum____ of
        None ->
            "NONE"

        FirstQuartile ->
            "FIRST_QUARTILE"

        SecondQuartile ->
            "SECOND_QUARTILE"

        ThirdQuartile ->
            "THIRD_QUARTILE"

        FourthQuartile ->
            "FOURTH_QUARTILE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ContributionLevel
fromString enumString____ =
    case enumString____ of
        "NONE" ->
            Just None

        "FIRST_QUARTILE" ->
            Just FirstQuartile

        "SECOND_QUARTILE" ->
            Just SecondQuartile

        "THIRD_QUARTILE" ->
            Just ThirdQuartile

        "FOURTH_QUARTILE" ->
            Just FourthQuartile

        _ ->
            Nothing
