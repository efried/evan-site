-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Scalar exposing (Base64String(..), Codecs, Date(..), DateTime(..), GitObjectID(..), GitSSHRemote(..), GitTimestamp(..), Html(..), Id(..), PreciseDateTime(..), Uri(..), X509Certificate(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Base64String
    = Base64String String


type Date
    = Date String


type DateTime
    = DateTime String


type GitObjectID
    = GitObjectID String


type GitSSHRemote
    = GitSSHRemote String


type GitTimestamp
    = GitTimestamp String


type Html
    = Html String


type Id
    = Id String


type PreciseDateTime
    = PreciseDateTime String


type Uri
    = Uri String


type X509Certificate
    = X509Certificate String


defineCodecs :
    { codecBase64String : Codec valueBase64String
    , codecDate : Codec valueDate
    , codecDateTime : Codec valueDateTime
    , codecGitObjectID : Codec valueGitObjectID
    , codecGitSSHRemote : Codec valueGitSSHRemote
    , codecGitTimestamp : Codec valueGitTimestamp
    , codecHtml : Codec valueHtml
    , codecId : Codec valueId
    , codecPreciseDateTime : Codec valuePreciseDateTime
    , codecUri : Codec valueUri
    , codecX509Certificate : Codec valueX509Certificate
    }
    -> Codecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate
    ->
        { codecBase64String : Codec valueBase64String
        , codecDate : Codec valueDate
        , codecDateTime : Codec valueDateTime
        , codecGitObjectID : Codec valueGitObjectID
        , codecGitSSHRemote : Codec valueGitSSHRemote
        , codecGitTimestamp : Codec valueGitTimestamp
        , codecHtml : Codec valueHtml
        , codecId : Codec valueId
        , codecPreciseDateTime : Codec valuePreciseDateTime
        , codecUri : Codec valueUri
        , codecX509Certificate : Codec valueX509Certificate
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate -> Codec getterValue)
    -> Codecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate
    = Codecs (RawCodecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate)


type alias RawCodecs valueBase64String valueDate valueDateTime valueGitObjectID valueGitSSHRemote valueGitTimestamp valueHtml valueId valuePreciseDateTime valueUri valueX509Certificate =
    { codecBase64String : Codec valueBase64String
    , codecDate : Codec valueDate
    , codecDateTime : Codec valueDateTime
    , codecGitObjectID : Codec valueGitObjectID
    , codecGitSSHRemote : Codec valueGitSSHRemote
    , codecGitTimestamp : Codec valueGitTimestamp
    , codecHtml : Codec valueHtml
    , codecId : Codec valueId
    , codecPreciseDateTime : Codec valuePreciseDateTime
    , codecUri : Codec valueUri
    , codecX509Certificate : Codec valueX509Certificate
    }


defaultCodecs : RawCodecs Base64String Date DateTime GitObjectID GitSSHRemote GitTimestamp Html Id PreciseDateTime Uri X509Certificate
defaultCodecs =
    { codecBase64String =
        { encoder = \(Base64String raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Base64String
        }
    , codecDate =
        { encoder = \(Date raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Date
        }
    , codecDateTime =
        { encoder = \(DateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map DateTime
        }
    , codecGitObjectID =
        { encoder = \(GitObjectID raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map GitObjectID
        }
    , codecGitSSHRemote =
        { encoder = \(GitSSHRemote raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map GitSSHRemote
        }
    , codecGitTimestamp =
        { encoder = \(GitTimestamp raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map GitTimestamp
        }
    , codecHtml =
        { encoder = \(Html raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Html
        }
    , codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecPreciseDateTime =
        { encoder = \(PreciseDateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map PreciseDateTime
        }
    , codecUri =
        { encoder = \(Uri raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uri
        }
    , codecX509Certificate =
        { encoder = \(X509Certificate raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map X509Certificate
        }
    }
